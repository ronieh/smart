// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"destroy","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"getSmarts","outputs":[{"name":"","type":"address[]"}],"type":"function"},{"constant":false,"inputs":[{"name":"iOwner","type":"address"},{"name":"iVar","type":"uint256"}],"name":"createSmart","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260008054600160a060020a031916331790556102d0806100246000396000f3606060405260e060020a600035046383197ef08114610031578063b5457e6514610059578063c6b8a8b8146100ba575b005b61002f60005433600160a060020a03908116911614156101c557600054600160a060020a0316ff5b61013a60006060908152600180546020810260a09081016040526080828152929190828280156100b057602002820191906000526020600020905b8154600160a060020a0316815290840190602001808311610094575b5050505050905090565b61002f600435602435600082826060610109806101c78339018083600160a060020a0316815260200182815260200192505050604051809103906000f060018054808201808355929350839282908280158290116101845781836000526020600020918201910161018491905b808211156101c157600081558401610127565b60405180806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600f02600301f1509050019250505060405180910390f35b5050508154811015610002579060005260206000209001600050805473ffffffffffffffffffffffffffffffffffffffff19169091179055505050565b5090565b566060604081815280610109833960a090525160805160008054600160a060020a031916909217825560015560d190819061003890396000f3606060405260e060020a6000350463208f1f998114604257806328a65428146054578063324f1f7d146079578063480e2c3614608357806383197ef014608c575b005b60b2600054600160a060020a03165b90565b6000805473ffffffffffffffffffffffffffffffffffffffff19166004351790556040565b6004356001556040565b60c56001546051565b604060005433600160a060020a039081169116141560cf57600054600160a060020a0316ff5b600160a060020a03166060908152602090f35b6060908152602090f35b56",
    unlinked_binary: "606060405260008054600160a060020a031916331790556102d0806100246000396000f3606060405260e060020a600035046383197ef08114610031578063b5457e6514610059578063c6b8a8b8146100ba575b005b61002f60005433600160a060020a03908116911614156101c557600054600160a060020a0316ff5b61013a60006060908152600180546020810260a09081016040526080828152929190828280156100b057602002820191906000526020600020905b8154600160a060020a0316815290840190602001808311610094575b5050505050905090565b61002f600435602435600082826060610109806101c78339018083600160a060020a0316815260200182815260200192505050604051809103906000f060018054808201808355929350839282908280158290116101845781836000526020600020918201910161018491905b808211156101c157600081558401610127565b60405180806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600f02600301f1509050019250505060405180910390f35b5050508154811015610002579060005260206000209001600050805473ffffffffffffffffffffffffffffffffffffffff19169091179055505050565b5090565b566060604081815280610109833960a090525160805160008054600160a060020a031916909217825560015560d190819061003890396000f3606060405260e060020a6000350463208f1f998114604257806328a65428146054578063324f1f7d146079578063480e2c3614608357806383197ef014608c575b005b60b2600054600160a060020a03165b90565b6000805473ffffffffffffffffffffffffffffffffffffffff19166004351790556040565b6004356001556040565b60c56001546051565b604060005433600160a060020a039081169116141560cf57600054600160a060020a0316ff5b600160a060020a03166060908152602090f35b6060908152602090f35b56",
    address: "0x977d28c37d65e9b918d4d734c11a6fadd32064cb",
    generated_with: "2.0.6",
    contract_name: "SmartFactory"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("SmartFactory error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("SmartFactory error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("SmartFactory error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("SmartFactory error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.SmartFactory = Contract;
  }

})();
